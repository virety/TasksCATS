# Условие
# Автостоянка, находящаяся поблизости от улицы имени Г. Кантора, ограничена с севера и запада домами, а с востока и юга открыта в большое поле.
# Чтобы упорядочить размещение автомобилей, владелец стоянки решил пронумеровать места на ней и выделить каждому клиенту номер и соответствующее место. Нумерацию решено производить так: месту в углу стоянки присвоен номер ноль, далее нумерация идёт по диагоналям в направлении с северо-востока на юго-запад.
# 0	1	3	6	10	…
# 2	4	7	11	…
# 5	8	12	…
# 9	13	…
# 14…
# …
# Координаты каждого места на стоянке определяются числами (x;y), где x — количество мест, расположенных западнее данного, y — количество мест, расположенных севернее. Например, место номер 7 имеет координаты (2;1).
# Требуется написать программу, которая для каждого из N данных номеров мест определит их координаты.
# Рекомендуется рассмотреть частичные решения
# N=1
# C≤10^6
# Формат входного файла
# Входной файла содержит число N, за которым следуют N целых чисел Ci — номера мест.
# Формат выходного файла
# Выходной файл должен содержать N пар чисел xiyi — координаты мест, соответствующие номерам во входном файле.
# Ограничения
# 1≤N≤10^5
# 0≤Ci≤10^9
# Примеры тестов
# №	Входной файл (input.txt)	Выходной файл (output.txt)
# 1	1                           1 0
#   1
# 2	2                           6106 234
#   20101204                    4 16
#   226
import math 
 
def koor(unic): 
    x = int((math.sqrt(8 * unic + 1) - 1) / 2) 
    tri_n = (x * (x + 1)) // 2 
    y = unic - tri_n 
    return y, x - y 
 
def program(): 
    with open("input.txt", "r") as inputFile, open("output.txt", "w") as outputFile: 
        n = int(inputFile.readline()) 
        for i in range(n): 
            unic = int(inputFile.readline()) 
            coordinates = koor(unic) 
            outputFile.write("{} {}\n".format(coordinates[1], coordinates[0])) 
program()