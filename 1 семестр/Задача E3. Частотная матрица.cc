// Условие
// Вам дана матрица целых неотрицательных чисел Aij. Требуется вычислить частотную матрицу Bij, где Bij — число вхождений числа j в строку с номером i матрицы A. Вычисление частот следует выполнить только для чисел от minAij до maxAij.
// Формат входных данных
// Первая строка входного файла содержит целые числа N,M — размеры матрицы A.Следующие N строк содержат M целых неотрицательных чисел каждая — числа матрицы Aij.
// Формат выходных данных
// Выходной файл должен содержать матрицу размера 
// N×maxAij — матрицу B.
// Ограничения
// 1≤N,M≤10000
// N⋅M≤10^6
// 0≤Aij≤100
// Примеры тестов
// №	Стандартный вход	Стандартный выход
// 1	3 2                 0 1 1
//     1 2                 0 2 0
//     1 1                 0 0 2
//     2 2
#include <stdio.h>

int main() {
int N, M;
scanf("%d %d", &N, &M);
int A[N][M];
for (int i = 0; i < N; i++) {
    for (int j = 0; j < M; j++) {
        scanf("%d", &A[i][j]);
    }
}
int min = A[0][0];
int max = A[0][0];
for (int i = 0; i < N; i++) {
    for (int j = 0; j < M; j++) {
        if (A[i][j] < min) {
            min = A[i][j];
        }
        if (A[i][j] > max) {   
            max = A[i][j];
        }
    }
}
int B[N][max + 1];
for (int i = 0; i < N; i++) {
    for (int j = 0; j <= max; j++) {
        B[i][j] = 0;
    }
}
for (int i = 0; i < N; i++) {
    for (int j = 0; j < M; j++) {
        B[i][A[i][j]]++;
    }
}
for (int i = 0; i < N; i++) {
    for (int j = 0; j <= max; j++) {
        printf("%d ", B[i][j]);
    }
    printf("\n");
}
return 0;
}

